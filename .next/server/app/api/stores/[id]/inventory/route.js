"use strict";(()=>{var e={};e.id=5194,e.ids=[5194],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},21007:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>y,patchFetch:()=>m,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>v,staticGenerationAsyncStorage:()=>c});var a={};r.r(a),r.d(a,{POST:()=>u});var s=r(49303),i=r(88716),o=r(60670),n=r(87070),p=r(72331);async function u(e,{params:t}){try{let{mediaItemId:r,quantity:a}=await e.json(),s=parseInt(t.id);return await p._.mediaSpace.deleteMany({where:{storeId:s,mediaItemId:r}}),a>0&&await p._.mediaSpace.createMany({data:Array(a).fill({storeId:s,mediaItemId:r,status:"available"})}),n.NextResponse.json({success:!0})}catch(e){return n.NextResponse.json({error:"Failed to update inventory"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/stores/[id]/inventory/route",pathname:"/api/stores/[id]/inventory",filename:"route",bundlePath:"app/api/stores/[id]/inventory/route"},resolvedPagePath:"/Users/yoyo/Desktop/adspace 2/app/api/stores/[id]/inventory/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:c,serverHooks:v}=d,y="/api/stores/[id]/inventory/route";function m(){return(0,o.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:c})}},72331:(e,t,r)=>{r.d(t,{_:()=>s});var a=r(53524);let s=globalThis.prisma??new a.PrismaClient({log:["query"]})}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[8948,5972],()=>r(21007));module.exports=a})();