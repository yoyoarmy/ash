"use strict";(()=>{var e={};e.id=4050,e.ids=[4050],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},37047:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>x,requestAsyncStorage:()=>m,routeModule:()=>u,serverHooks:()=>l,staticGenerationAsyncStorage:()=>c});var a={};r.r(a),r.d(a,{GET:()=>d});var s=r(49303),i=r(88716),o=r(60670),n=r(87070),p=r(72331);async function d(e){try{let{searchParams:t}=new URL(e.url),r=t.get("typeId"),a=t.get("storeId");if(!r||!a)return n.NextResponse.json({error:"Type ID and Store ID are required"},{status:400});let s=await p._.mediaItem.findMany({where:{mediaItemTypeId:parseInt(r),mediaSpaces:{some:{storeId:parseInt(a)}}},include:{mediaItemType:!0,mediaSpaces:{where:{storeId:parseInt(a)}}}});return n.NextResponse.json(s)}catch(e){return console.error("Error fetching media items:",e),n.NextResponse.json({error:"Failed to fetch media items"},{status:500})}}let u=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/media-items/route",pathname:"/api/media-items",filename:"route",bundlePath:"app/api/media-items/route"},resolvedPagePath:"/Users/yoyo/Desktop/adspace 2/app/api/media-items/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:c,serverHooks:l}=u,h="/api/media-items/route";function x(){return(0,o.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:c})}},72331:(e,t,r)=>{r.d(t,{_:()=>s});var a=r(53524);let s=globalThis.prisma??new a.PrismaClient({log:["query"]})}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[8948,5972],()=>r(37047));module.exports=a})();