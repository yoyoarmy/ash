"use strict";(()=>{var e={};e.id=1091,e.ids=[1091],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},86373:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>N,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var n={};r.r(n),r.d(n,{GET:()=>c,POST:()=>p});var o=r(49303),s=r(88716),i=r(60670),a=r(87070),u=r(72331);async function c(){try{console.log("Prisma instance:",!!u._),console.log("NotificationSettings model:",!!u._?.notificationSettings);let e=await u._.$queryRaw`
      SELECT * FROM "NotificationSettings"
    `;return console.log("Found settings:",e),a.NextResponse.json(e)}catch(e){return console.error("Error fetching settings:",e),a.NextResponse.json({error:"Failed to fetch settings"},{status:500})}}async function p(e){try{let{brandId:t,email:r}=await e.json();if(console.log("Received request:",{brandId:t,email:r}),!t||!r)return a.NextResponse.json({error:"brandId and email are required"},{status:400});let n=Number(t),o=await u._.$queryRaw`
      INSERT INTO "NotificationSettings" ("brandId", "email", "createdAt", "updatedAt")
      VALUES (${n}, ${r}, NOW(), NOW())
      ON CONFLICT ("brandId") 
      DO UPDATE SET "email" = ${r}, "updatedAt" = NOW()
      RETURNING *
    `;return console.log("Settings saved:",o),a.NextResponse.json(o)}catch(e){return console.error("Error saving settings:",e),a.NextResponse.json({error:e instanceof Error?e.message:"Failed to save settings"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/notification-settings/route",pathname:"/api/notification-settings",filename:"route",bundlePath:"app/api/notification-settings/route"},resolvedPagePath:"/Users/yoyo/Desktop/adspace 2/app/api/notification-settings/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:g,serverHooks:m}=d,f="/api/notification-settings/route";function N(){return(0,i.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},72331:(e,t,r)=>{r.d(t,{_:()=>o});var n=r(53524);let o=globalThis.prisma??new n.PrismaClient({log:["query"]})}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[8948,5972],()=>r(86373));module.exports=n})();